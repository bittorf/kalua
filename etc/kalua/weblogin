_weblogin_splashscript ()
{
	if [ -e /usr/sbin/uhttpd ]; then
		echo -n "cgi-bin-welcome.sh"
	else
		echo -n "cgi-bin-welcome"
	fi
}

_weblogin_htmlout_loginpage ()				# needs: images/logo.gif|logo2.gif              + images/flag_de|en|fr.gif
{							#        images/button_login_de.gif		+ images/bgcolor.txt
	_http header_mimetype_output "text/html"	#        /favicon.ico
	_translate include

	local funcname="weblogin_htmlout_loginpage"
	local LANG="$( _translate lang $1 )"
	local SHOW_RULES="$2"				# fixme! can be 'inet_broken'
	local SHOW_PASSWORD_WRONG="$3"
	local SHOW_ACCEPT_RULES="$4"
	local LINK_BASE="$5"				# e.g. http://$WIFIADR
	local INJECT_TITLE="$6"
	local MOBILE_MODE="$7"				# show field for mobile-number instead of username/password

	case "$( uci get system.@weblogin[0].auth )" in
		password2mobile) MOBILE_MODE="mobile_mode" ;;
	esac

	local LANG_DIRECTION="ltr"			# fixme! left2right or right2left?
	local CODEPAGE="ISO-8859-15"			# fixme! lang <-> charset/codepage?
	local BGCOLOR LINK SLOGAN MYLANG MYLANGLIST NEXT_LANG_SUBSET_START
	local AMP="&amp;"
	local TABINDEX="6"	# is hardcoded on most points
	local SEP=":"		# was "&middot;" but lynx cannot display this 8-) and the ' looks wierd, maybe use "|"?
	local LOCATION_NAME="$( _weblogin metadata_locationname )"
	local LOGO_DESCRIPTION="$( _translate do "$LANG" site_logo ) ('$LOCATION_NAME')"	# fixme! we need an better meta-description, e.g. Schriftzug | Bett auf Wolken ...


	local font_start font_end font_face font_color

	[ -e /www/images/font_face.txt ] && {
		read font_face </www/images/font_face.txt
	}

	[ -e /www/images/font_color.txt ] && {
		read font_color </www/images/font_color.txt
	}

	[ -n "$font_face" ] && {
		font_start="<font face='$font_face' color='${font_color:-#000000}'>"	# defaults to black
		font_end="</font>"
	}


	case "$LANG" in
		 da|ru|ja) NEXT_LANG_SUBSET_START="de" ; MYLANGLIST="da ru ja" ;;	# fixme! abstraction needed?
			*) NEXT_LANG_SUBSET_START="da" ; MYLANGLIST="de en fr" ;;	# fixme! distinguish forward/backward
	esac

	local LANG_CACHE_FILE="/tmp/weblogin_langcache_${LANG_DIRECTION}_${MYLANGLIST}_${INJECT_TITLE}"

	[ -n "$FORM_RULES" -o -n "$MOBILE_MODE" ] && SHOW_ACCEPT_RULES="false"
	[ "$FORM_SHOW_ACCEPT_RULES"   = "true"  ] && SHOW_ACCEPT_RULES="true"
	[ "$FORM_SHOW_PASSWORD_WRONG" = "true"  ] && SHOW_PASSWORD_WRONG="true"

	LINK="${LINK_BASE}${SCRIPT_NAME:-/$( _weblogin splashscript )}?REDIRECTED=1"
	[ "$SHOW_PASSWORD_WRONG" = "true" ] && LINK="${LINK}${AMP}FORM_SHOW_PASSWORD_WRONG=true"
	[ "$SHOW_ACCEPT_RULES"   = "true" ] && LINK="${LINK}${AMP}FORM_SHOW_ACCEPT_RULES=true"
	LINK="${LINK}${AMP}FORM_LANG"

	read BGCOLOR 2>/dev/null </www/images/bgcolor.txt		# fixme! defaulting to #F2F2F2 ?
									# fixme! _weblogin metadata slogan()
	SLOGAN="$( test -e /www/images/logo2.gif && echo -n "<IMG SRC='${LINK_BASE}/images/logo2.gif' TITLE='Hotel-Slogan' ALT='Hotel-Slogan'><BR><BR>" )"

	cat <<EOF
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<HTML lang="$LANG" dir="$LANG_DIRECTION"><HEAD>
<TITLE>Weblogin $SEP Captive portal $SEP Splash screen $SEP $LOCATION_NAME $SEP ${INJECT_TITLE}</TITLE>
<META HTTP-EQUIV="cache-control" CONTENT="no-cache">
<META HTTP-EQUIV="pragma" CONTENT="no-cache"> 
<META HTTP-EQUIV="expires" CONTENT="0">
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=${CODEPAGE}">
<LINK REL="shortcut icon" TYPE="image/x-icon" HREF="${LINK_BASE}/favicon.ico">
</HEAD>
<BODY BGCOLOR="${BGCOLOR:=#ffffff}" TEXT="#000000"><CENTER>
EOF

	cat "$LANG_CACHE_FILE" 2>/dev/null || {

		for MYLANG in $MYLANGLIST; do {

			echo -n "<A TABINDEX='$TABINDEX' HREF='$LINK=$MYLANG' HREFLANG='$MYLANG' CHARSET='$CODEPAGE' TITLE='"
			_translate do "$MYLANG" in_my_lang							# idea: build it with tables 8-)
			echo -n "'><IMG SRC='${LINK_BASE}/images/flag_${MYLANG}.gif' BORDER='0' ALT='${MYLANG}' TITLE='"	# each flag is a 16x12/GIF
			_translate do "$MYLANG" in_my_lang
			echo -n "'>&nbsp;${font_start}"
			_translate do "$MYLANG" langname
			echo -n "${fontend}</A>&nbsp;&nbsp;"
			TABINDEX="$(( $TABINDEX + 1 ))"
			
		} done >"$LANG_CACHE_FILE"
		cat "$LANG_CACHE_FILE"
	}				# fixme! each image has to have an 'filename.gif_dimensions' with 'X Y' pixels, to better follow standards
					# image: fits best with 220px, transparency, GIF
					# fixme! lynx cannot display the "next" symbol, use image+alt instead!
					# fixme! maybe group username/pass with <fieldset> + <legend>?
					# fixme! font zusaetzlich mit CSS festlegen <span style="font-family:'Times New Roman',Times,serif">
					# fixme! testsuite: dillo1/2, w3m, lynx, links2, IE4+, pirelli-phone + all mainstream browsers
	cat <<EOF
<A TABINDEX='10' HREF='$LINK=$NEXT_LANG_SUBSET_START' HREFLANG='$NEXT_LANG_SUBSET_START' CHARSET='$CODEPAGE' TITLE='$( _translate do "$LANG" other_languages )'><big><b>${font_start}&raquo;${font_end}</b></big></a>
<BR><BR>${SLOGAN}<IMG SRC="${LINK_BASE}/images/logo.gif" TITLE="$LOGO_DESCRIPTION" ALT="$LOGO_DESCRIPTION"><FORM METHOD="post" ACTION="${LINK}">
<TABLE CELLSPACING="0" CELLPADDING="0" BORDER="0" width='85%'>
<TR><TD ALIGN="CENTER"><BR><B><BIG>${font_start}$( _translate do "$LANG" internetaccess )${font_end}</BIG></B></TD></TR>
EOF
	[ "$FORM_SHOW_RULES"	 = "true"	 ] && _weblogin htmlout_rules			$LANG
	[ "$SHOW_PASSWORD_WRONG" = "true"	 ] && _weblogin htmlout_message_wrong_logindata	$LANG
	[ "$SHOW_ACCEPT_RULES"	 = "true"	 ] && _weblogin htmlout_rules_hint		$LANG
	[ "$SHOW_RULES"		 = "inet_broken" ] && _weblogin htmlout_inet_broken		$LANG


	[ -n "$FORM_MOBILE_NUMBER" ] && {

		local mac="$( _net ip2mac $REMOTE_ADDR )"

		[ -e /tmp/login_was_sent_to_mobilenumber_${mac:-unset} ] || {

			if _sanitizer do "$FORM_MOBILE_NUMBER" mobilenumber check; then

				_weblogin htmlout_message_password_was_send $LANG

				MOBILE_MODE=							# to enforce normal username/password login page
				touch /tmp/login_was_sent_to_mobilenumber_${mac:-unset}		# fixme! delete on successful login

				local profile=1
				local devices=1
				local fuzzy=1
				local USERNAME PASSWORD

				_db user login add "$profile" "sms" "" "" "$devices" "" "$fuzzy"	# fixme! if we don't have a local db, outsource to master
				_db user login index_gen						# fixme! implement fast_index() last
				eval $( _db user login show last "USERNAME PASSWORD" )

				_log do $funcname daemon sms \
					"login from $FORM_MOBILE_NUMBER" \
					"Ihr Benutzername/Passwort: $USERNAME/$PASSWORD - Wir wuenschen einen angenehmen Aufenthalt" \
					"$FORM_MOBILE_NUMBER" \
					"force"
			else
				_weblogin htmlout_message_wrong_mobile_number $LANG
			fi
		}
	}


	cat <<EOF
<TR><TD ALIGN="CENTER"><BR><TABLE CELLSPACING="0" CELLPADDING="2" BORDER="0">
EOF

	case "$MOBILE_MODE" in
		mobile_mode)
			cat <<EOF
<TR><TD ALIGN="RIGHT"><label for='mobile_number'>$( _translate do "$LANG" mobile_number ):&nbsp;</label><INPUT TABINDEX="1" ID="mobile_number" TYPE="text" SIZE="10" MAXLENGTH="30" NAME="FORM_MOBILE_NUMBER" VALUE="$FORM_MOBILE_NUMBER"></TD></TR>
<TR><TD ALIGN="CENTER"><BR><INPUT TYPE="image" TABINDEX="3" SRC="${LINK_BASE}/images/button_login_de.gif" ALT="&rarr;Login"></TD></TR>
EOF
		;;
		*)
			local hidden_adlink="<a hreflang='en' href='http://bittorf-wireless.de/en/node/66' title='comprehensive wireless internet access throughout the entire hotel complex using mesh technology'>.</a>"
			local i18n_username i18n_password
			local config_profile="$( uci get system.@profile[0].name )"

			if _weblogin device_or_customer_needs_admin_interaction "$config_profile" ; then
				_weblogin htmlout_needs_admin_interaction "$LANG"
			else
				case "$config_profile" in
					spbansin*)
						i18n_username="$( _translate do "$LANG" roomnumber )"
						# i18n_password="$( _translate do "$LANG" bookingcode )"		# fixme!
					;;
					*)
						i18n_username="$( _translate do "$LANG" username )"
						i18n_password="$( _translate do "$LANG" password )"
					;;
				esac

				case "$config_profile" in
					ffweimar*)
						echo "Willkommen im Weimarnetz"
					;;
					spbansin*)
						cat <<EOF
<TR><TD ALIGN="CENTER"><label for='username'>${font_start}${i18n_username}:${font_end}&nbsp;</label><INPUT TABINDEX="1" ID="username" TYPE="text" SIZE="10" MAXLENGTH="30" NAME="FORM_USER" VALUE="$FORM_USER"></TD></TR>
EOF
					;;
					*)
						cat <<EOF
<TR><TD ALIGN="RIGHT"><label for='username'>${font_start}${i18n_username}:${font_end}&nbsp;</label><INPUT TABINDEX="1" ID="username" TYPE="text" SIZE="10" MAXLENGTH="30" NAME="FORM_USER" VALUE="$FORM_USER"></TD></TR>
<TR><TD ALIGN="RIGHT"><label for='password'>${font_start}${i18n_password}:${font_end}&nbsp;</label><INPUT TABINDEX="2" ID="password" TYPE="password" SIZE="10" MAXLENGTH="10" NAME="FORM_PASS"></TD></TR></TABLE></TD></TR>
EOF
					;;
				esac

				cat <<EOF
<TR><TD ALIGN="CENTER"><BR><INPUT TYPE="checkbox" ID="accept_terms" TABINDEX="4" NAME="FORM_RULES" checked><label for='accept_terms'>&nbsp;${font_start}$( _translate do "$LANG" accept_terms1 )${font_end} <A TABINDEX="5" HREF="${LINK}=${LANG}${AMP}FORM_SHOW_RULES=$( if [ "$FORM_SHOW_RULES" = "true" ]; then echo -n 'false'; else echo -n 'true'; fi )" TITLE="$( _translate do "$LANG" tip_contract )">${font_start}$( _translate do "$LANG" accept_terms2 )${font_end}</A>${hidden_adlink}</label></TD></TR>
<TR><TD ALIGN="CENTER"><BR><INPUT TYPE="image" TABINDEX="3" SRC="${LINK_BASE}/images/button_login_de.gif" ALT="&rarr;Login"></TD></TR>
EOF
			fi
		;;
	esac

	cat <<EOF
</TABLE></FORM></CENTER>
</BODY></HTML>
EOF
}

_weblogin_metadata_locationname ()
{
	local LANG="$( _translate lang $1 )"
	local META="/www/images/weblogin_rules_${LANG}_meta"

	[ ! -e "$FILE" ] && {
		LANG="$( _translate lang default )"
		META="/www/images/weblogin_rules_${LANG}_meta"
	}

	[ -e "$META" ] && eval "$( sed 's/^/local /' $META )"

	echo "${HOTELNAME:-Internet}"
}

_weblogin_htmlout_rules ()
{
	local LANG="$( _translate lang $1 )"
	local FILE="/www/images/weblogin_rules_${LANG}.txt"		# fixme! must be coded in ISO_8859-1
	local META="/www/images/weblogin_rules_${LANG}_meta"

	[ ! -e "$FILE" ] && {
		LANG="$( _translate lang default )"
		FILE="/www/images/weblogin_rules_${LANG}.txt"
		META="/www/images/weblogin_rules_${LANG}_meta"
	}

	eval "$( sed 's/^/local /' $META )"
	
	echo -n "<TR BGCOLOR='#b0c4de'><TD ALIGN="LEFT"><BR>"		# fixme! hardcoded color?

	sed	-e '/^#/d' \
		-e "s#\${HOTELNAME}#<nobr>$HOTELNAME</nobr>#g" \
		-e "s#\${BEZAHLMODELL}#$BEZAHLMODELL#g" \
		-e "s#\${SPEED}#$SPEED#g" \
		-e "s#\${TECHNIK}#$TECHNIK#g" \
		-e "s#\${WARTUNGSFENSTER}#$WARTUNGSFENSTER#g" \
		-e "s#\${SPEICHERDAUER}#$SPEICHERDAUER#g" \
		-e "s#\${ERSTELLUNGSZEIT}#$ERSTELLUNGSZEIT#g" \
		-e "s#\${SIGNATUR}#<a title='Administrationszugang' href='../index.html'>\&middot;</a><a title='Benutzerverwaltung' href='../cgi-bin/userdb'>$SIGNATUR</a>#g" \
		-e 's#^[0-9]\.[0-9]#<br><br><b>&</b>#' \
		-e 's#^[0-9]\. .*#<h3>&</h3>#' \
		-e 's#^  $#<br><br>#' \
		-e 's#è#\&egrave;#g' \
		-e 's#é#\&eacute;#g' \
		-e 's#É#\&Eacute;#g' \
		-e 's#ê#\&ecirc;#g' \
		-e 's#à#\&agrave;#g' \
		-e 's#â#\&acirc;#g' \
		-e 's#ô#\&ocirc;#g' \
		-e 's#ù#\&ugrave;#g' \
		-e 's/�/\&sect;/g' \
		-e 's/�/\&sect;/g' \
		-e 's/�/\&ouml;/g' \
		-e 's/�/\&uuml;/g' \
		-e 's/�/\&auml;/g' \
		-e 's/�/\&szlig;/g' $FILE

	echo -n "<BR><BR></TD></TR>"	
}

_weblogin_htmlout_rules_hint ()
{
	local LANG="$1"
	
	echo -n "<TR BGCOLOR='#E0ACAC'><TD ALIGN="CENTER"><BR><B>&nbsp;$( _translate do "$LANG" accept_rules )&nbsp;</B><BR><BR></TD></TR>"
}

_weblogin_htmlout_message_password_was_send ()
{
	local LANG="$1"

	echo -n "<TR BGCOLOR='lime'><TD ALIGN="CENTER"><BR><B>&nbsp;$( _translate do "$LANG" password_was_send )&nbsp;</B><BR><BR></TD></TR>"
}

_weblogin_htmlout_message_wrong_mobile_number ()
{
	local LANG="$1"

	echo -n "<TR BGCOLOR='#E0ACAC'><TD ALIGN="CENTER"><BR><B>&nbsp;$( _translate do "$LANG" wrong_mobile_number )&nbsp;</B><BR><BR></TD></TR>"
}

_weblogin_htmlout_needs_admin_interaction()
{
	local LANG="$1"
	local i18n_hint

	i18n_hint="$( _translate do "$LANG" needs_admin_interaction )"

	echo -n "<TR BGCOLOR='#E0ACAC'><TD ALIGN="CENTER"><BR><B>&nbsp;${i18n_hint}&nbsp;</B><BR><BR></TD></TR>"
}

_weblogin_htmlout_message_wrong_logindata ()
{
	local LANG="$1"
	local i18n_hint

	case "$( uci get system.@profile[0].name )" in
		spbansin*)
			i18n_hint="$( _translate do "$LANG" wrong_room_number )"
		;;
		*)
			i18n_hint="$( _translate do "$LANG" wrong_logindata )"
		;;
	esac

	echo -n "<TR BGCOLOR='#E0ACAC'><TD ALIGN="CENTER"><BR><B>&nbsp;${i18n_hint}&nbsp;</B><BR><BR></TD></TR>"
}

_weblogin_htmlout_gatepage ()
{
	_http header_mimetype_output "text/html"

	cat <<EOF
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>weimarnetz: Netzknoten $( uci get system.@profile[0].nodenumber ) ("$( uci get system.@system[0].hostname )")</title>
<style type="text/css">
h1 { margin:0; padding:3pt; background:#333; color:white; font-size:15px; border-bottom:#333 1px solid;}
li { font-size:14px; font-weight:700; padding:12pt 0pt 0pt 10pt;list-style:none; height:30px; border-bottom:#333 1px solid; background:#fff}
a{text-decoration:none; color:222;}
li:hover{background:#3399FF; }
li:hover a{color:#fff}
ul {margin:0;padding:0; width: 100%;}
body {font-family:sans-serif; width:100%; height:100%; background-color:#333; padding:0; margin:0; color:black;}
</style>
</head>
<body>
<h1>Bitte ausw&auml;hlen</h1>
<ul>
<li><a href="http://${WIFIADR}${SCRIPT_NAME:-/$( _weblogin splashscript )}?REDIRECTED=1">weiter ins Internet</a></li>
<li><a href="http://vikingosegundo.de/mw/">Experiment "hoopy-froods.net"</a></li>
<li><a href="http://$WIFIADR/cgi-bin-index.html">Startseite dieses Netzknotens</a></li>
</ul>
</body>
</html>
EOF
}

_weblogin_htmlout_inet_broken ()
{
	local LANG="$1"

	_log do "weblogin_htmlout_inet_broken" daemon alert "during user action"
	echo -n "<TR BGCOLOR='#E0ACAC'><TD ALIGN="CENTER"><BR><B>&nbsp;$( _translate do "$LANG" inet_broken )&nbsp;</B><BR><BR></TD></TR>"	
}

_weblogin_device_or_customer_needs_admin_interaction()
{
	local funcname="weblogin_device_or_customer_needs_admin_interaction"
	local config_profile="$1"

	case "$config_profile" in
		rehungen-adhoc-*)
			_log do $funcname daemon info "triggered: $REMOTE_ADDR"
			return 0
		;;
	esac

	return 1
}

_weblogin_login_check ()		# fixme! send HOSTNAME?
{					# fixme! answer must be a challenge/response:	// prevent replay attacks!
	local FUNC="weblogin_login_check"
	local USER="$1"			#        1. send hash of user/pass
	local PASS="$2"			#        2. server answers with hash_of(1+my_secret_sshid) + auth=true/false
	local MAC="$3"			#        3. we calc same hash and compare
	local SIGNAL="$4"
	local LANG="$( _translate lang $5 )"
	local KEYWORD="$6"		# can be 'plaintext'
	local FREE HASH GATEWAY ANSWER
	local URL PARAMETERS

	USER="${USER:-$MAC}"		# check for mac-enabled devices, which gets a splash-screen

	strip_leading_and_trailing_tabs_and_spaces ()
	{
		local string="$1"

		echo "$string" | sed 's/^[ 	]*//;s/[ 	]*$//'
	}

	has_leading_or_trailing_tabs_or_spaces ()
	{
		local string="$1"

		case "$string" in
			" "*|*" ")		# spaces
				return 0
			;;
			"	"*|*"	")	# tabs
				return 0
			;;
			*)
				return 1
			;;
		esac
	}

	has_leading_or_trailing_tabs_or_spaces "$USER" && {
		_log do $FUNC daemon info "string tabs/spaces: username '$USER'"
		USER="$( strip_leading_and_trailing_tabs_and_spaces "$USER" )"
	}

	has_leading_or_trailing_tabs_or_spaces "$PASS" && {
		_log do $FUNC daemon info "string tabs/spaces: password '$PASS'"
		PASS="$( strip_leading_and_trailing_tabs_and_spaces "$PASS" )"
	}

	[ -n "$KEYWORD" ] && {
		KEYWORD="${USER}+${PASS}"
	}

	HASH="$( echo -n "${USER}${PASS}" | md5sum | cut -d' ' -f1 )"

	mac_is_from_lan()
	{
		local mac="$1"
		local ip dev

		ip="$(  _net mac2ip "$mac" )"
		dev="$( _net ip2dev "$ip"  )"

		case "$dev" in
			$LANDEV)
				return 0
			;;
			*)
				return 1
			;;
		esac
	}

	local profile="$( uci get system.@profile[0].name )"

	case "$profile" in
		ffweimar*)
			case "$SIGNAL" in
				*dhcp*)
					_log do $FUNC daemon info "DHCP-mode, profile is $profile - ignoring"
				;;
				*)
					_log do $FUNC daemon info "FREE, is profile $profile"
					FREE=1
				;;
			esac
		;;
		rehungen*|liszt28*)
			mac_is_from_lan "$MAC" && {
				_log do $FUNC daemon info "FREE, is profile $profile from LANDEV"
				FREE=1
			}

			[ "$( uci get network.lan.ipaddr )" = "10.10.152.33" ] && {
				[ "$HASH" = "38178cdf6173811999516635a809ede3" ] && {
					FREE=1		# fixme!
				}
			}

			_weblogin device_or_customer_needs_admin_interaction "$profile" && {
				FREE=
			}
		;;
		versilia*)
			[ "$( uci get network.lan.ipaddr )" = "10.63.191.225" ] && {
				mac_is_from_lan "$MAC" && {
					_log do $FUNC daemon info "FREE, is profile $profile from LANDEV on 10.63.191.225"
					FREE=1		# fixme!
				}
			}
		;;
		spbansin*)
			is_valid_booking_number()	# 1234-2011 |  12345-2011
			{
				local number="$1"
				local code year

				case "$number" in
					*-*)
						code="$( echo "$number" | cut -d'-' -f1 )"
						year="$( echo "$number" | cut -d'-' -f2 )"

						[ ${#code} -eq 4 -o ${#code} -eq 5 ] && {

							year_now="$( date +%Y )"

							if [ "$year" = "$year_now" ]; then
								return 0
							else
								[ ${#year} -eq 4 ] && {
									[ "$( date +%m )" = "01" ] && {
										[ "$year" = "$(( $year_now - 1 ))" ] && {
											# in januar 2012 we can enter 2011
											return 0
										}
									}
								}
							fi
						}
					;;
				esac

				return 1
			}

			is_valid_room_number()
			{
				[ ${#1} -eq 3 ] && {
					case "$1" in
						100|101|102|103|104|105|106|107|108|109|110) return 0 ;;
						200|201|202|203|204|205|206|207|208|209|210) return 0 ;;
						300|301|302|303|304|305|306|307|308|309|310) return 0 ;;
						400|401|402|403|404|405|406|407|408|409|410) return 0 ;;
						600|601|602|603|604|605|606|607|608|609|610) return 0 ;;
						700|701|702|703|704|705|706|707|708|709|710) return 0 ;;
						800|801|802|803|804|805|806|807|808|809|810) return 0 ;;
						900|901|902|903|904|905|906|907|908|909|910) return 0 ;;
					esac
				}

				[ ${#1} -eq 4 ] && {
					case "$1" in
						1000|1001|1002|1003|1004|1005|1006|1007|1008|1009|1010) return 0 ;;
						1100|1101|1102|1103|1104|1105|1106|1107|1108|1109|1110) return 0 ;;
						1200|1201|1202|1203|1204|1205|1206|1207|1208|1209|1210) return 0 ;;
					esac
				}

				return 1
			}

			is_valid()
			{
				is_valid_room_number    "$1" || return 1
				# is_valid_booking_number "$2" || return 1

				return 0
			}

			if is_valid "$USER" "$PASS" ; then
				_log do $FUNC daemon info "FREE, is profile $profile"
				FREE=1
			else
				_log do $FUNC daemon info "is not a valid combination: $USER / $PASS"
			fi
		;;
	esac

	if   [ "$FREE" = "1" ] ; then
		:
	elif [ -e /tmp/FREE ]; then
		_log do $FUNC daemon info "[OK] auth: existing /tmp/FREE"
		FREE=1
	elif [ -e /tmp/vds_user_$MAC ]; then
		_log do $FUNC daemon info "[OK] auth: existing /tmp/vds_user_$MAC"
		FREE=1
	else
		_log do $FUNC daemon info "query local db for '$HASH'"
		[ -n "$( _db user login query hash2id "$HASH" )" ] && {
			_log do $FUNC daemon info "[OK] auth: local db knows hash '$HASH'"
			FREE=1	# use local DB, if available - but also send logmsg to GW
		}
	fi

	needs_enforced_newstyle()
	{
		case "$profile" in
			apphalle_*)
				return 0
			;;
			*)
				return 1
			;;
		esac
	}

#	[ "$FREE" != "1" ] && {

		GATEWAY="$( uci get system.@weblogin[0].authserver )"		

		case "$profile" in
			marinapark*)
				case "$( uci get system.@profile[0].nodenumber )" in
					95)
						GATEWAY="$WIFIADR"
					;;
					*)
						GATEWAY="10.63.95.1"
					;;
				esac
			;;
			*)
				GATEWAY="$( uci get system.@weblogin[0].authserver )"
			;;
		esac

		[ -z "$GATEWAY" ] && {
			read GATEWAY 2>/dev/null </tmp/GATEWAY_CHECK_RECENT_GATEWAY_IP_ONLY
		}

		# fixme! we should urlencode ":" in MAC, but it works also plain!?
		PARAMETERS="LOGIN=${HASH}&MAC=${MAC}&SIGNAL=${SIGNAL}&KEYWORD=${KEYWORD}&USER_LANG=${LANG}"

		if [ "${GATEWAY:-127.0.0.1}" = "127.0.0.1" -o "$GATEWAY" = "$WIFIADR" -o "$GATEWAY" = "$LANADR" ]; then

			ANSWER="$( /www/cgi-bin-sql "$HASH" "$MAC" "$SIGNAL" "$KEYWORD" "$USER_LANG" )"

		elif [ -e /www/force_weblogin_check_script ]; then

			local scriptname
			read scriptname </www/force_weblogin_check_script
			URL="http://${GATEWAY:-127.0.0.1}/$scriptname"

			ANSWER="$( _wget do "${URL}?${PARAMETERS}" 5 )"

		elif [ -e /usr/sbin/uhttpd ]; then
			URL="http://${GATEWAY:-127.0.0.1}/cgi-bin-sql.sh"
			ANSWER="$( _wget do "${URL}?${PARAMETERS}" 5 )"
		elif needs_enforced_newstyle ; then
			URL="http://${GATEWAY:-127.0.0.1}/cgi-bin-sql.sh"
			ANSWER="$( _wget do "${URL}?${PARAMETERS}" 5 )"
		else
			URL="http://${GATEWAY:-127.0.0.1}/cgi-bin-sql"
			ANSWER="$( _wget do "${URL}?${PARAMETERS}" 5 )"
		fi
#	}

	[ ${#ANSWER} -gt 10 ] && ANSWER="shortened: $( _sanitizer do "$ANSWER" firstline length:30 )"

	_log do $FUNC daemon info "ANSWER: '$ANSWER' (1=ok) FREE: '$FREE' URL: '${URL:-locally_asked:}?${PARAMETERS}'"

	[ "$ANSWER" = "1" -o "$FREE" = "1" ] && {
		echo "$HASH" >/tmp/vds_user_$MAC		# fixme! for building vds, use DB instead (easy/simple mac2hash)
		return 0
	}

	return 1
}

_weblogin_ticket_mail_text ()
{
	local TICKETTYPE="${1:-unset_ticket_name}"
	local config_profile="${2:-$( uci get system.@profile[0].name )}"

	local LOCATION="$( _weblogin metadata_locationname | sed 's#\\&acute;##' )"
	local MAINTENANCE_COMPANY
	local MAINTENANCE_PHONE
	local MAINTENANCE_HINT1="Gerne beantworten wir Ihnen Fragen zum System"
	local MAINTENANCE_HINT2="unter der Telefonummer"	

	case "$config_profile" in			# fixme! move to 'mydesign.opk' or userdb()
		aschbach*|hotello*)
			MAINTENANCE_COMPANY="CaNS - Computer and Network Solutions"
			MAINTENANCE_PHONE="+49 (8167) 88 41"
#			MAINTENANCE_HINT1=
			MAINTENANCE_HINT2="$MAINTENANCE_HINT2 $MAINTENANCE_PHONE"
		;;
		olympia*)
			MAINTENANCE_COMPANY="Schlund Networks - Computer und Netzwerk im Raum Muenchen"
			MAINTENANCE_PHONE="+49 (177) 590 66 89"
#			MAINTENANCE_HINT1=
			MAINTENANCE_HINT2="$MAINTENANCE_HINT2 $MAINTENANCE_PHONE"
		;;
		paltstadt*)
			MAINTENANCE_COMPANY="Elektro Steinmetz"
			MAINTENANCE_PHONE="+49 (03643) 42 18 09"
			MAINTENANCE_HINT2="$MAINTENANCE_HINT2 $MAINTENANCE_PHONE"
		;;
		*)
			MAINTENANCE_COMPANY="bittorf wireless ))"
			MAINTENANCE_PHONE="+49 (3643) 49 65 235"	
			MAINTENANCE_HINT2="$MAINTENANCE_HINT2 $MAINTENANCE_PHONE"
		;;
	esac

	cat <<EOF
WLAN-System / neue Tickets / $LOCATION

Guten Tag,

das WLAN-System hat festgestellt, dass von der Ticketart

	$TICKETTYPE

nur noch wenige Logins vorhanden sind. Im Dateianhang finden
Sie deshalb eine weitere Liste in verschiedenen Vorlagen.
Die bisherigen Listen behalten Ihre Gueltigkeit.

mit drahtlosen Gruessen,
Ihr WLAN-System von "$MAINTENANCE_COMPANY"

-- 
$MAINTENANCE_HINT1
$MAINTENANCE_HINT2
EOF
}
