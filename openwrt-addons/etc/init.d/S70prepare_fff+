#!/bin/sh
. /tmp/loader

[ -n "$FAILSAFE" ] && exit

case $1 in
	unload_unneeded_kmodules)
		if [ -e "/www/GOOD_MODULE_UNLOAD" ]; then
			_net local_inet_offer >/dev/null || {
				[ -e "/www/SIMPLE_MESHNODE" ] && {
					/etc/init.d/netfilter stop
				}
			}

			if [ -e "/tmp/KMODULE.action" ]; then	# generated from /lib/functions.sh during boot
				. /tmp/KMODULE.action
				/usr/sbin/cron.patch_load_kmodules.sh
			else
				while read LINE; do {
					rmmod "$LINE" || echo "$LINE = $?" >>"/tmp/GOOD_MODULE_UNLOAD.log"
				} done <"/www/GOOD_MODULE_UNLOAD"

				case "$HARDWARE" in
					"Buffalo WHR-HP-G54"|"Linksys WRT54G"*)
						[ -e "/etc/init.d/apply_profile" ] || /usr/sbin/cron.patch_load_kmodules.sh
					;;
				esac
			fi
		else
			# ath5k mac80211 ath cfg80211 compat arc4 crypto_algapi

			L1="pppox pppoe slhc ppp_generic"
			L2="ppp_async switch_adm switch_robo switch_core diag"
			L3="ts_fsm ts_bm ts_kmp"
			L4="crc_ccitt aes_generic"
			L5="compat_xtables compat b43legacy bcma_hcd ssb_hcd ohci_hcd nls_base usbcore usb_common"
			L6="xt_multiport xt_comment xt_CLASSIFY xt_time xt_tcpmss xt_statistic"
			L7="xt_DSCP xt_dscp xt_string xt_layer7 xt_quota xt_pkttype xt_owner xt_ecn"
			L8="xt_recent xt_helper xt_conntrack xt_CT xt_NOTRACK xt_HL xt_hl xt_ipp2p"
			L9="ipt_ecn ipt_ECN ipt_NETMAP iptable_raw"
			L0="nf_nat_proto_gre nf_nat_tftp nf_nat_sip nf_nat_pptp nf_nat_h323 nf_nat_amanda nf_nat_irc nf_nat_ftp"
			LA="nf_conntrack_tftp nf_conntrack_sip nf_conntrack_pptp nf_conntrack_h323 nf_conntrack_proto_gre nf_conntrack_amanda nf_conntrack_irc nf_conntrack_ftp xt_length xt_connmark xt_connbytes xt_limit ipt_LOG"

			LB="ipt_ULOG xt_mark xt_length ipt_REDIRECT iptable_nat nf_nat xt_connmark xt_connbytes xt_state nf_conntrack_ipv4 nf_defrag_ipv4 nf_conntrack ipt_REJECT xt_TCPMSS ipt_LOG xt_mac xt_limit iptable_mangle iptable_filter ip_tables xt_tcpudp x_tables"
			[ -e "/www/SIMPLE_MESHNODE" ] || LB=

			[ "$( uci -q get network.wan.proto )" = "pppoe" ] && L1=
			LIST="$L1 $L2 $L3 $L4 $L5 $L6 $L7 $L8 $L9 $L0 $LA $LB"

			_net local_inet_offer >/dev/null || {
				[ -e "/www/SIMPLE_MESHNODE" ] && {
					/etc/init.d/netfilter stop
				}
				LIST="$LIST ipt_MASQUERADE"
			}

			unload()
			{
				local list="$1"
				local kmod

				for kmod in $list; do {

					_log do kmodule_unloader daemon info "rmmod '$kmod'" 
					rmmod $kmod

					if grep -q ^"$kmod " "/proc/modules"; then
						echo "$kmod"
					else
						echo "$kmod" >>"/www/GOOD_MODULE_UNLOAD"
					fi
				} done
			}

			I=0
			while [ -n "$LIST" ]; do {
				I=$(( $I + 1 ))
				[ $I -eq 100 ] && break
				LIST="$( unload "$LIST" )"
				LIST="$( _list shuffle "$LIST" )"
			} done
		fi

		killall klogd
		killall hotplug2
		killall syslogd

		[ -e /www/SIMPLE_MESHNODE ] && {

			list_ip_from_dhcp_leases()
			{
				cut -d' ' -f3 /tmp/dhcp.leases
			}

			list_ip_from_arp_cache()
			{
				ip neigh show | cut -d' ' -f1
			}

			can_see_lan_clients()
			{
				local ip

				for ip in $( list_ip_from_dhcp_leases ) $( list_ip_from_arp_cache ); do {
					fgrep -q "$ip;" "/tmp/CLIENTS_LAN" && return 0
				} done

				test -e "/www/SIMPLE_MESHNODE_FORCE_DHCP_LAN"
			}

			uci set dhcp.wlan.ignore=1
			uci delete dhcp.@dnsmasq[0].dhcpscript

			if can_see_lan_clients; then
				/etc/init.d/dnsmasq restart
			else
				uci set dhcp.lan.ignore=1
				/etc/init.d/dnsmasq stop
				echo "nameserver $( uci -q get dhcp.@dnsmasq[0].server )" >"/etc/resolv.conf"
			fi
		}

		touch /tmp/service_cronwatchdog_nowatching
		touch /tmp/cron_watchdog_please_end_yourself_$( cat /tmp/cron_watchdog.id )

		[ -e "/bin/dmesg" ] && {
			dmesg -c >>"/tmp/dmesg.boot"
		}

		ROOTETHERNET="$( echo $LANDEV | cut -d'.' -f1 )"	# eth0.1 -> eth0
		ip link set dev $ROOTETHERNET txqueuelen 32

		touch "/tmp/service_ssh_nowatching"
		killall dropbear
	;;
	start)

		[ -e "/etc/init.d/deactivated_cron_daemon" ] && {
			mv /etc/init.d/deactivated_cron_daemon /etc/init.d/S51crond_fff+
			/etc/init.d/S51crond_fff+ start
		}

		[ $( _system ram_size ) -gt 16384 ] || {
			$0 unload_unneeded_kmodules
		}

		grep -sq ^"START=97" "/etc/init.d/watchdog" && {
			sed -i 's/=97/=01/' "/etc/init.d/watchdog"
			CMD1="pidof watchdog >/dev/null"
			CMD2="echo 1000 >/proc/\$( pidof watchdog )/oom_score_adj"
			sed -i "s|}|	$CMD1 \&\& $CMD2 \n}|" "/etc/init.d/watchdog"
			eval $CMD2
		}

		PPPOE=0
		[ -n "$( uci -q get network.wan.username )" ] && PPPOE="$(( $PPPOE + 1 ))"
		[ -n "$( uci -q get network.wan.password )" ] && PPPOE="$(( $PPPOE + 1 ))"

		if [ $PPPOE -eq 2 -a ! -e "/tmp/PPPOE_NEEDED" ]; then
			touch "/tmp/PPPOE_NEEDED"
		else
			rm -f "/tmp/PPPOE_NEEDED"
		fi

		# fixme!
		# newstyle:
		# check first paragraph, which contains "option Mode":
		#
		# sed -e '/./{H;$!d;}' -e 'x;/option Mode/!d;' /etc/config/olsrd | fgrep "Mode" | wc -l 
		#
		# equal 2? -> do something


		found_specific_hna_offer()
		{
			uci show olsrd | grep -q "olsrd.@Hna4\[.\].netaddr=$1"
		}

		attach_lan_ip()		# fixme! build an uci-representation
		{
			local ip="$1"
			local label="$2"

			ip address show dev $LANDEV | fgrep -q " $ip/32 " || {
				_log do attach_lan_ip daemon info "adding $ip to $LANDEV:$label"
				ip address add $ip dev $LANDEV label "$( _sanitizer do "$LANDEV:$label" length:15 )"
			}
		}

		found_specific_hna_offer 6.6.6.5 && attach_lan_ip 6.6.6.5 monitor	# internal monitor aggregator
		found_specific_hna_offer 6.6.6.6 && attach_lan_ip 6.6.6.6 dns
		found_specific_hna_offer 6.6.6.7 && attach_lan_ip 6.6.6.7 userdb
		found_specific_hna_offer 6.6.6.8 && attach_lan_ip 6.6.6.8 tunnelsrv	# only use for ask is_possible?

		[ -e "/etc/init.d/apply_profile" ] || {
			[ "$( _firmware updatemode )" = "testing" ] && {
				_firmware update_pmu
			}
		}

		/usr/sbin/cron.check_inet_gw_fff+
		
		# register first time
		/usr/sbin/cron.registrator_client.sh
		# draw on map first time
		/usr/sbin/owm.lua

	;;
	*)
		echo "Usage: $0 start"
	;;
esac
