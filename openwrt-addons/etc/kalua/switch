_switch_show()		# e.g.: "X.xxX-" = "1GB gap 100mbit 100mbit 1GB nothing"
{
	local funcname="switch_show"
	local type="${1:-$( uci -q get network.@switch[0].name )}"
	local debug="$2"
	local line duplex n list

	case "$type" in
		""|eth0)
			type="$( _switch type )"
		;;
	esac

	case "$type" in
		ag71xx|ar231x|mii|mii.*)
			which mii-tool >/dev/null || {
				_software package_install mii-tool >/dev/null

				which mii-tool >/dev/null || \
					return 1
			}

			case "$type" in
				*"."*)
					line="$( mii-tool ${type#*.} )"		# mii.eth1 -> eth1
				;;
				*)
					line="$( mii-tool ${LANDEV:-${WANDEV:-empty_dev}} )"
				;;
			esac

			[ -n "$debug" ] && \
				_log do $funcname daemon debug "type: $type - line '$line'"

			case "$line" in
				*"link ok"*)			# "negotiated 100baseTx-FD, link ok"
					case "$line" in
						*"-FD,"*)
							duplex="full"
						;;
						*)
							duplex="half"
						;;
					esac

					case "$line" in
						*" 100baseTx"*)
							_switch symbol $duplex 100
						;;
						*" 10baseT"*)
							_switch symbol $duplex 10
						;;
						*)
							_switch symbol unknown
						;;
					esac
				;;
				*)
					echo -n "-"
				;;
			esac
		;;
		bcm53xx)
			which robocfg >/dev/null || {
				_software package_install robocfg >/dev/null

				which robocfg >/dev/null || \
					return 1
			}

			for port in 0 gap 1 2 3 4; do {		# [ WAN | LAN LAN LAN LAN ]

				if [ "$port" = "gap" ]; then
					echo -n "."
				else
					line="$( robocfg show 2>/dev/null | fgrep "Port ${port}(" )"
					[ -n "$debug" ] && \
						_log do $funcname daemon debug "type: $type port: $port line '$line'"

					case "$line" in
						*"DOWN"*)
							echo -n "-"
						;;
						*)
							case "$line" in
								*"0FD enabled"*)
									duplex="full"
								;;
								*)
									duplex="half"
								;;
							esac

							case "$line" in
								*":  10"*)
									_switch symbol $duplex 10
								;;
								*": 100"*)
									_switch symbol $duplex 100
								;;
								*)
									_switch symbol unknown
								;;
							esac
						;;
					esac
				fi
			} done
		;;
		rtl8366rb|ar8316|ar7240|switch0)
			which swconfig >/dev/null || \
				return 1

			case "$type" in
				ar7240)			# e.g. TP-LINK WR841ND
					type="eth0"
					list="$( _switch show mii.eth1 "$debug" ) gap 4 3 2 1"	# special-wan | lan-ports
				;;
				ar8316)			# e.g. Buffalo WZR-HP-AG300H
					type="eth0"
					list="$( _switch show mii.eth1 "$debug" ) gap 1 2 3 4"	# special-wan | lan-ports
				;;
				*)
					list="0 gap 1 2 3 4"	# [ WAN | LAN LAN LAN LAN ]
				;;
			esac

			for port in $list; do {

				case "$port" in
					a|b|c|A|B|C|Z|-)
						echo -n "$port"
						continue
					;;
				esac

				if [ "$port" = "gap" ]; then
					echo -n "."
				else
					line="$( swconfig dev $type port $port show | fgrep "link: port:" )"
					[ -n "$debug" ] && \
						_log do $funcname daemon debug "type: $type port: $port line '$line'"

					case "$line" in
						*"link: port:$port link: down"*)
							echo -n "-"
						;;
						*"link: port:$port link:down"*)
							echo -n "-"
						;;
						*"link:up"*)
							case "$line" in
								*"full-duplex"*)
									duplex="full"
								;;
								*)
									duplex="half"
								;;
							esac

							case "$line" in
								*"speed:10baseT"*)
									_switch symbol $duplex 10
								;;
								*"speed:100baseT"*)
									_switch symbol $duplex 100
								;;
								*"speed:1000baseT"*)
									_switch symbol $duplex 1000
								;;
								*)
									_switch symbol unknown
								;;
							esac
						;;
					esac
				fi
			} done
		;;
	esac
}

_switch_symbol()
{
	local duplex="$1"
	local speed="$2"

	case "${duplex}${speed}" in
		"half10")
			echo -n "a"
		;;
		"half100")
			echo -n "b"
		;;
		"half1000")
			echo -n "c"
		;;
		"full10")
			echo -n "A"
		;;
		"full100")
			echo -n "B"
		;;
		"full1000")
			echo -n "C"
		;;
		*)
			echo -n "Z"		# means: 'unknown'
		;;
	esac
}

_switch_type()
{
	if [ -e "/tmp/SWITCH_TYPE" ]; then
		read type <"/tmp/SWITCH_TYPE"
	elif [ ! -e "/tmp/dmesg.boot" ]; then
		case "$HARDWARE" in
			"ASUS WL-500g Premium"|"Linksys WRT54G:GS:GL"|"Linksys WRT54G/GS/GL"|"Buffalo WHR-HP-G54"|"Dell TrueMobile 2300")
				type="bcm53xx"
			;;
		esac
	else
		probe_type0()
		{
			fgrep -q "AR7240/AR9330" "/tmp/dmesg.boot" && \
				echo "ar7240"
		}

		probe_type1()
		{
			fgrep "roboswitch:" "/tmp/dmesg.boot" | fgrep -q "found a 53" && \
				echo "bcm53xx"
		}

		probe_type2()
		{
			fgrep -q "ar8316: " "/tmp/dmesg.boot" && \
				echo "ar8316"
		}

		probe_type3()
		{
			fgrep -q "ar231x_eth_mii:" "/tmp/dmesg.boot" && \
				echo "ar231x"
		}

		probe_type4()
		{
			fgrep -q "mii_bus:phy_addr" "/tmp/dmesg.boot" && \
				echo "mii"
		}

		probe_type5()
		{
			fgrep -q "AG71xx" "/tmp/dmesg.boot" && \
				echo "ag71xx"
		}

		probe_type6()
		{
			fgrep -q "mv643xx_eth" "/tmp/dmesg.boot" && \
				echo "mii"
		}

		for n in 0 1 2 3 4 5 6; do {
			type="$( probe_type${n} )" && {
				echo "$type" >/tmp/SWITCH_TYPE
				break
			}
		} done
	fi

	echo "$type"
}
