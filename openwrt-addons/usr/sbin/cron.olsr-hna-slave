#!/bin/sh
. /tmp/loader

nexthop()
{
	_sanitizer do "$( ip route list exact 0.0.0.0/0 table main | head -n1 )" ip4
}

nexthop_dev()
{
	case "$( ip route list exact 0.0.0.0/0 table main | head -n1 )" in
		*" dev $LANDEV "*)
			echo "$LANDEV"
		;;
		*" dev $WANDEV "*)
			echo "$WANDEV"
		;;
		*)
			return 1
		;;
	esac
}

ask_for_slave()
{
	local funcname="ask_for_slave"
	local netaddr netmask answer url nexthop_ip

	netaddr="$( uci -q get olsrd.@Hna4[0].netaddr )"		# 10.63.4.0
	netmask="$( uci -q get olsrd.@Hna4[0].netmask )"
	netmask="$( _net mask2cidr "$netmask" )"		# 26
	nexthop_ip="$( nexthop )"

	url="http://$nexthop_ip/cgi-bin-olsr-hna-slave.sh"
	url="${url}?netaddr=$netaddr"
	url="${url}&netmask=$netmask"

	answer="$( _wget do "$url" 30 )"
	_log do $funcname daemon info "$url -> '$answer'"

	case "$answer" in
		"NEVER")
			uci set olsrd.@meta[0].hnaslave=0
		;;
		"OK")
			return 0
		;;
	esac

	return 1
}

olsr_on_wifi()
{
	local i j name

	for j in 0 1 2 3; do {

		name="$( uci -q get wireless.@wifi-iface[$j].network )"	# e.g. wlan
		[ -z "$name" ] && continue

		for i in 0 1 2 3; do {
			case "$( uci -q get olsrd.@Interface[$i].interface )" in
				*"$name"*)
					return 0
				;;
			esac
		} done
	} done

	return 1
}

stop_olsr_and_set_static_routes()
{
	local funcname="stop_olsr_and_set_static_routes"
	local nexthop="$( nexthop )"
	local nexthop_dev="$( nexthop_dev )"

	ip route add default via $nexthop dev $nexthop_dev metric 1 onlink
	echo "$nexthop" >"/tmp/OLSR_HNA_SLAVE_PINGTEST"

	eval $( _ipsystem do | grep ^WIFIMSK= )
	ip address add $WIFIADR/$WIFIMSK dev $WIFIDEV	# add /27
	ip address del $WIFIADR/$WIFIPRE dev $WIFIDEV	# del /8
	uci set network.wlan.netmask="$WIFIMSK"		# if something makes 'wifi up'

	ip route flush cache
	ip -oneline route get "$nexthop" | fgrep -q " dev $nexthop_dev " || {
		_log go $funcname daemon alert "route goes out over wrong device, reboot"
		reboot
	}

	touch /tmp/service_olsrd_nowatching
	_olsr daemon stop "i'am now a hna4-slave from $( nexthop )"
}

[ "$HARDWARE" = "Buffalo WZR-HP-AG300H" ] || {
	olsr_on_wifi || {
		nexthop_dev >/dev/null && {
			pidof olsrd >/dev/null && {
				_net local_inet_offer >/dev/null || {
					ask_for_slave && {
						stop_olsr_and_set_static_routes
					}
				}
			}
		}
	}
}
